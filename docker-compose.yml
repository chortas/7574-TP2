version: '3'
services:
  rabbitmq:
    build:
      context: ./rabbitmq
      dockerfile: Dockerfile
    ports:
      - 15672:15672
      - 5672:5672

  filter_avg_rating_server_duration:
    container_name: filter_avg_rating_server_duration
    image: filter_avg_rating_server_duration:latest
    entrypoint: python3 /main.py
    restart: on-failure
    depends_on:
      - rabbitmq
    links: 
      - rabbitmq
    environment:
      - MATCH_EXCHANGE=match_exchange
      - OUTPUT_QUEUE=output_queue_1
      - AVG_RATING_FIELD=average_rating
      - SERVER_FIELD=server
      - DURATION_FIELD=duration
      - ID_FIELD=token
    
  group_by_match:
    container_name: group_by_match
    image: group_by_match:latest
    entrypoint: python3 /main.py
    restart: on-failure
    depends_on:
      - rabbitmq
    links: 
      - rabbitmq
    environment:
      - PLAYER_EXCHANGE=player_exchange
      - N_REDUCERS=2
      - GROUP_BY_MATCH_QUEUE=group_by_match_queue
      - MATCH_FIELD=match

  reducer_group_by_match_1:
    container_name: reducer_group_by_match_1
    image: reducer_group_by_match:latest
    entrypoint: python3 /main.py
    restart: on-failure
    depends_on:
      - rabbitmq
    links: 
      - rabbitmq
    environment:
      - GROUP_BY_MATCH_QUEUE=group_by_match_queue_1
      - MATCH_FIELD=match
      - GROUPED_PLAYERS_QUEUE=grouped_players_queue

  reducer_group_by_match_2:
    container_name: reducer_group_by_match_2
    image: reducer_group_by_match:latest
    entrypoint: python3 /main.py
    restart: on-failure
    depends_on:
      - rabbitmq
    links: 
      - rabbitmq
    environment:
      - GROUP_BY_MATCH_QUEUE=group_by_match_queue_2
      - MATCH_FIELD=match
      - GROUPED_PLAYERS_QUEUE=grouped_players_queue

  filter_solo_winner_player:
    container_name: filter_solo_winner_player
    image: filter_solo_winner_player:latest
    entrypoint: python3 /main.py
    restart: on-failure
    depends_on:
      - rabbitmq
    links: 
      - rabbitmq
    environment:
      - GROUPED_PLAYERS_QUEUE=grouped_players_queue
      - OUTPUT_QUEUE=output_queue_2
      - RATING_FIELD=rating
      - WINNER_FIELD=winner

  matches_broadcaster:
    container_name: matches_broadcaster
    image: broadcaster:latest
    entrypoint: python3 /main.py
    restart: on-failure
    depends_on:
      - rabbitmq
    links: 
      - rabbitmq
    environment:
      - QUEUE_NAME=match_queue
      - EXCHANGE_NAME=match_exchange

  filter_ladder_map_mirror:
    container_name: filter_ladder_map_mirror
    image: filter_ladder_map_mirror:latest
    entrypoint: python3 /main.py
    restart: on-failure
    depends_on:
      - rabbitmq
    links: 
      - rabbitmq
    environment:
      - MATCH_EXCHANGE=match_exchange
      - MATCH_TOKEN_EXCHANGE=match_token_exchange
      - TOP_CIV_ROUTING_KEY=top_civ_routing_key
      - RATE_WINNER_ROUTING_KEY=rate_winner_routing_key
      - LADDER_FIELD=ladder
      - MAP_FIELD=map
      - MIRROR_FIELD=mirror
      - ID_FIELD=token
  
  players_broadcaster:
    container_name: players_broadcaster
    image: broadcaster:latest
    entrypoint: python3 /main.py
    restart: on-failure
    depends_on:
      - rabbitmq
    links: 
      - rabbitmq
    environment:
      - QUEUE_NAME=player_queue
      - EXCHANGE_NAME=player_exchange

  players_cleaner:
    container_name: players_cleaner
    image: players_cleaner:latest
    entrypoint: python3 /main.py
    restart: on-failure
    depends_on:
      - rabbitmq
    links: 
      - rabbitmq
    environment:
      - PLAYER_EXCHANGE=player_exchange
      - MATCH_FIELD=match
      - CIV_FIELD=civ
      - WINNER_FIELD=winner
      - JOIN_EXCHANGE=match_token_exchange
      - JOIN_ROUTING_KEY=player_rate_winner_routing_key

  filter_rating:
    container_name: filter_rating
    image: filter_rating:latest
    entrypoint: python3 /main.py
    restart: on-failure
    depends_on:
      - rabbitmq
    links: 
      - rabbitmq
    environment:
      - PLAYER_EXCHANGE=player_exchange
      - RATING_FIELD=rating
      - MATCH_FIELD=match
      - CIV_FIELD=civ
      - ID_FIELD=token
      - JOIN_EXCHANGE=match_token_exchange
      - JOIN_ROUTING_KEY=player_top_civ_routing_key

  join_rate_winner:
    container_name: join_rate_winner
    image: join:latest
    entrypoint: python3 /main.py
    restart: on-failure
    depends_on:
      - rabbitmq
    links: 
      - rabbitmq
    environment:
      - MATCH_TOKEN_EXCHANGE=match_token_exchange
      - N_REDUCERS=2
      - MATCH_CONSUMER_ROUTING_KEY=rate_winner_routing_key
      - JOIN_QUEUE=join_rate_winner
      - MATCH_ID_FIELD=token
      - PLAYER_CONSUMER_ROUTING_KEY=player_rate_winner_routing_key
      - PLAYER_MATCH_FIELD=match

  join_top_civ:
    container_name: join_top_civ
    image: join:latest
    entrypoint: python3 /main.py
    restart: on-failure
    depends_on:
      - rabbitmq
    links: 
      - rabbitmq
    environment:
      - MATCH_TOKEN_EXCHANGE=match_token_exchange
      - N_REDUCERS=2
      - MATCH_CONSUMER_ROUTING_KEY=top_civ_routing_key
      - JOIN_QUEUE=join_top_civ
      - MATCH_ID_FIELD=token
      - PLAYER_CONSUMER_ROUTING_KEY=player_top_civ_routing_key
      - PLAYER_MATCH_FIELD=match